# 🏗️ SQL Data Warehouse Project

## 📌 Overview

This project demonstrates the design and implementation of a **SQL-based Data Warehouse** using a layered medallion architecture—**Bronze**, **Silver**, and **Gold**—built on SQL Server. The final output consists of business-ready views suitable for Power BI, Tableau, and other BI tools.

---

## 🎯 Project Objective

- Ingest raw data from CRM and ERP sources
- Clean, transform, and standardize it using best practices
- Maintain referential integrity across dimension and fact tables
- Build reporting-ready views using the **Star Schema**
- Enable seamless BI integration

---

## 🧩 Tech Stack

| Component              | Technology        |
|------------------------|------------------|
| Database Engine        | SQL Server        |
| Scripting Language     | T-SQL             |
| Data Ingestion         | BULK INSERT       |
| Data Modeling          | Star Schema       |
| Tools Used             | SSMS, Notepad++, Draw.io |
| Naming Convention      | `snake_case`      |

---

## 🔍 Requirement Analysis & Data Exploration

1. **Source Systems**:
   - **CRM**: Customer data (ID, names, marital status, gender)
   - **ERP**: Product, location, and order details

2. **Business Goals**:
   - Create unified, cleaned customer and product views
   - Maintain surrogate keys and foreign key consistency
   - Build reusable ETL pipeline for future scaling

3. **Initial Data Exploration**:
   - Checked for nulls, duplicates, inconsistent casing
   - Identified key relationships:
     - `Customer → Orders`
     - `Product → Orders`

---

## 🧱 Layered Architecture Breakdown

### 🔹 1. Bronze Layer – Raw Data Ingestion

**Files**:
- `02_create_tables_bronze.sql`
- `03_load_bronze.sql`

**Key Actions**:
- Created staging tables matching the CRM and ERP schema
- Used `BULK INSERT` to load raw `.csv` files
- No transformations or constraints applied at this stage

**Example Tables**:
- `bronze.crm_cust_info`
- `bronze.erp_orders`
- `bronze.erp_products`

---

### 🔸 2. Silver Layer – Data Cleaning & Transformation

**File**: `04_build_silver.sql` (Stored Procedure)

**Key Actions**:
- Removed duplicates using `ROW_NUMBER()`
- Trimmed, cleaned, and standardized data (e.g., gender, country codes)
- Enforced foreign key relationships
- Applied business logic for formatting, null handling, and enrichment

**Example Tables**:
- `silver.clean_customers`
- `silver.clean_products`
- `silver.clean_orders`

**Transformations Performed**:
- Uppercasing names and categories
- Mapping codes (e.g., `'M' → 'Mountain'`)
- Country standardization (`'US' → 'United States'`)
- Surrogate key creation

---

### 🟡 3. Gold Layer – Business-Ready Views

**File**: `05_build_gold.sql` (Stored Procedure)

**Key Actions**:
- Created dimension and fact views using Star Schema principles
- Used `ROW_NUMBER()` for surrogate keys
- Joined silver tables to form business-reporting views

**Final Views**:
- `gold.dim_customers`
- `gold.dim_products`
- `gold.fact_orders`

These views are optimized for use in BI tools like Power BI, Tableau, or Excel.

---

---

## 📊 BI Output Integration

The following views are available for direct integration:

| View Name           | Description                                |
|---------------------|--------------------------------------------|
| `gold.dim_customers` | Customer attributes for analytics (Name, Status, etc.) |
| `gold.dim_products`  | Product catalog and categories             |
| `gold.fact_sales`   | Transaction data joining customer-product |

Connect these views to Power BI, Tableau, or Excel for building dashboards.

---

## ✅ Highlights

- ✅ Cleanly staged raw data into the Bronze layer
- ✅ Robust ETL logic through Stored Procedures
- ✅ Star schema implementation for analytical queries
- ✅ Ready for BI tools and reporting systems
- ✅ Used consistent `snake_case` naming convention throughout

---

## 🙌 Acknowledgments

Built as a hands-on project to demonstrate practical data engineering and data warehouse skills using SQL Server.

Created by **Sai Krishna Akkala**  
[🔗 GitHub Profile](https://github.com/sai-krishna-akkala)
contact : saikrishnaakkala9@gmail.com
## 🔗 Connect with Me on LinkedIn

[![LinkedIn](https://img.shields.io/badge/LinkedIn-View%20Profile-blue?logo=linkedin)](https://www.linkedin.com/in/sai-krishna-akkala07/)


---


